// 
//  WeatherInteractor.swift
//  Weather
//
//  Created by Canh Tran Wizeline on 6/11/20.
//  Copyright ¬© 2020 CanhTran. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class WeatherInteractor {
    // MARK: - Private Properties

    private let networkClient: NetworkRequestable

    // MARK: - LifeCycle

    init(networkClient: NetworkRequestable = NetworkClient()) {
        self.networkClient = networkClient
    }
}

// MARK: - WeatherInteractorInterface

extension WeatherInteractor: WeatherInteractorInterface {
    
    func fetchWeatherData(isCached: Bool, keyword: String, completion: @escaping (Result<[Forecast], NetworkError>) -> Void) {
        networkClient.fetch(
            endPoint: WeatherEndpoint.fetchWeatherData(keyword: keyword),
            type: ForecastResponse.self,
            loadFromCache: isCached) { (result) in
                DispatchQueue.main.async {
                    switch result {
                    case .success(let response):
                        completion(.success(response.list))
                    case .failure(let error):
                        completion(.failure(error))
                    }
                }
        }
    }
    
}
